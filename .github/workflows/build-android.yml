name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-apk:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential git unzip python3-pip
        sudo apt install -y openjdk-8-jdk
        sudo apt install -y autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo6 cmake libffi-dev libssl-dev
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install kivy[base]==2.1.0
        pip install reportlab>=3.6.0
        pip install Pillow>=9.0.0
        pip install pandas>=1.3.0
        pip install openpyxl>=3.0.0
        pip install buildozer==1.4.0
        pip install cython==0.29.33

    - name: Install Android SDK and Build Tools
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        mkdir -p $ANDROID_HOME/cmdline-tools/latest  # Create target directory first
        mkdir -p $ANDROID_HOME/temp  # Temporary folder for unzipping
        
        # Download and unzip command line tools to temp folder
        wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d $ANDROID_HOME/temp
        
        # Move contents (not the folder itself) to the "latest" directory
        mv $ANDROID_HOME/temp/cmdline-tools/* $ANDROID_HOME/cmdline-tools/latest/
        
        # Clean up temporary files
        rm -rf $ANDROID_HOME/temp cmdline-tools.zip
        
        # Add Android tools to PATH
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/build-tools/33.0.2:$PATH
        
        # Accept SDK licenses and install required tools
        yes | sdkmanager --licenses
        sdkmanager "build-tools;33.0.2" "platforms;android-33" "platform-tools"    
        
    - name: Build APK with Buildozer
      run: |
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        export ANDROID_HOME=$HOME/android-sdk  # Match the path from Step 1
        export PATH=$ANDROID_HOME/build-tools/33.0.2:$PATH  # Ensure aidl is in PATH
        cd android_app/  # Navigate to the directory containing buildozer.spec
        buildozer android debug
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: android_app/bin/*.apk 
        
    - name: List generated files
      run: |
        echo "Generated APK files:"
        ls -la bin/
        
    - name: Upload APK as release asset (if tagged)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
